//Springs method
sf::Vector2f Scene_Menu::force(int node)
{
    int size = layout.size();
    std::vector<bool> checked(size, false);

    sf::Vector2f position = layout[node].position;
    sf::Vector2f force = sf::Vector2f(0, 0);

    float k = sqrt(window->getSize().x * window->getSize().y / size);

    for(unsigned int i = 0; i < layout[node].adjancents.size(); i++)
    {
        sf::Vector2f destination = layout[layout[node].adjancents[i]].position;

        sf::Vector2f direction = destination - position; //current -> adjacent (force)
        float angle = atan2f(direction.y, direction.x);

        float tmpForce = pow(distance(position, destination), 2) / k;

        force += sf::Vector2f(tmpForce * cosf(angle), tmpForce * sinf(angle));

        checked[layout[node].adjancents[i]] = true;
    }

    for(unsigned int i = 0; i < size; i++)
    {
        if(i != node and not checked[i])
        {
            sf::Vector2f destination = layout[i].position;

            sf::Vector2f direction = destination - position; //current <- adjacent (force)
            float angle = atan2f(direction.y, direction.x);

            float tmpForce = -1 * (pow(k, 2) / distance(position, destination));

            force += sf::Vector2f(tmpForce * cosf(angle), tmpForce * sinf(angle));

            checked[i] = true;
        }
    }

    return force;
}